# レスポンスのJSONのstring値をアサートできる

## JSON Path
* レスポンスボディとしてシナリオデータストアに"{ \"key1\": \"value1\", \"key2\": [ \"value2\" ] }"を保存する
* レスポンスのJSONの"$.key1"が文字列の"value1"である
* レスポンスのJSONの"$.key2[0]"が文字列の"value2"である

## JSON Pathで指定したオブジェクトが一致しない
* レスポンスボディとしてシナリオデータストアに"{ \"key1\": \"value1\", \"key2\": [ \"value2\" ] }"を保存する
* レスポンスのJSONの"$.key1"が文字列の"value2"でない
* レスポンスのJSONの"$.key2[0]"が文字列の"value1"でない

## JSON Pathで指定した配列を条件で絞った1オブジェクト
* レスポンスボディとしてシナリオデータストアに"{\"key1\":[{\"id\":\"a\",\"key3\":\"x\"}, {\"id\":\"b\",\"key3\": \"y\" }, {\"id\":\"c\",\"key3\":\"z\"}]}"を保存する
* レスポンスのJSONの"$.key1"の配列の、UniqueKey"id"の値が"b"である要素の"key3"が、文字列の"y"である

## 配列内における存在（有）
* レスポンスボディとしてシナリオデータストアに"{\"tests\": [\"test1\", \"test2\", \"test3\"]}"を保存する
* レスポンスのJSONの配列"$.tests"に、文字列"test2"が存在する

## 配列内における存在（無）
* レスポンスボディとしてシナリオデータストアに"{\"tests\": [\"test1\", \"test2\", \"test3\"]}"を保存する
* レスポンスのJSONの配列"$.tests"に、文字列"test4"が存在しない
